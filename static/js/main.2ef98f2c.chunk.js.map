{"version":3,"sources":["components/genderContext/genderData.js","components/WeeklyOpeningTimes/data/openingTimes.js","components/genderContext/genderContext.js","components/ToggleGender/ToggleGender.js","components/ClearGender/ClearGender.js","components/ToggleCalendar/ToggleCalendar.js","components/WeeklyOpeningTimes/data/changedOpeningTimes.js","libraries/moment/moment.js","components/OpeningTimesByDay/OpeningTimesByDay.js","components/WeeklyOpeningTimes/WeeklyOpeningTimes.js","components/OpeningTimesChangedMessage/OpeningTimesChangedMessage.js","components/PromptToChangeGenderContext/PromptToChangeGenderContext.js","components/OpeningTimesCalendar/OpeningTimesCalendar.js","components/OpeningTimes/OpeningTimes.js","pages/HomePage/HomePage.js","pages/ErrorPage/ErrorPage.js","pages/index.js","pages/HomePage/config.js","pages/ErrorPage/config.js","components/Navigation/Navigation.js","components/Layout/Layout.js","components/ChooseGender/ChooseGender.js","components/SetScreens/SetScreens.js","components/App/App.js","serviceWorker.js","index.js"],"names":["id","gender","name","nameCap","salonType","openingTimes","dayName","dayNumber","open","openTime","closeTime","GenderContext","createContext","GenderDataProvider","children","useState","_genderData","genderData","sessionStorage","getItem","parseInt","currentGender","setCurrentGender","currentGenderData","setCurrentGenderData","otherGenderData","setOtherGenderData","useEffect","i","length","Provider","value","ToggleButton","styled","button","ToggleGender","elementType","useContext","onClick","setItem","data-element-type","ClearGender","title","removeItem","defaultProps","genderDataForCalendar","setGenderForCalendar","toggleGenderForCalendar","e","genderId","target","getAttribute","toBeFirst","sort","x","y","sortToggleButtonOrder","map","key","data-id","className","CHANGED_OPENING_TIMES_DATA","date","moment","require","momentDayToday","day","momentDateToday","format","momentDateIn7Days","add","Day","li","Spacer","span","OpeningTimes","TimeAdjusted","OpeningTimesByDay","timesAdjusted","setNewWeekCalendar","alternativeOpeningTimesThisWeek","forEach","dateWithCHANGED_OPENING_TIMES_DATA","push","getAlternativeTimesForTheFollowing7Days","obj","find","o","WeeklyOpeningTimes","weekCalendar","setWeekCalendar","index","dayUniqueKey","Message","div","openingTimesHaveChanged","setOpeningTimesHaveChanged","haveOpeningTimesChanged","PromptToChangeGenderContext","genderDataIsDifferentToParentComponentData","Calendar","CalendarTitle","h3","OpeningTimesCalendar","OpeningTimesChangedMessage","genderForCalendar","setGenderDataForCalendar","genderMatch","getNewGenderDataForCalendar","ToggleCalendar","HomePage","ErrorPage","pages","path","exact","component","navigationItem","navigationChildren","toggleGenders","Nav","nav","Navigation","navItems","console","log","Root","ContentArea","Main","main","MainLayout","Gender","ChooseGender","setGender","SetScreens","props","routeUniqueKey","routeProps","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ef98f2c.chunk.js","sourcesContent":["// External, react, library, etc imports\n// NA ATM\n\n// Internal global, context, etc\nimport {OPENING_TIMES_GENDER_1_DATA, OPENING_TIMES_GENDER_2_DATA} from '../WeeklyOpeningTimes/data/openingTimes';\n\n// Website, function/hooks, etc imports\n// NA ATM\n\nexport const DEFAULT_GENDER = null;\n\nexport const MALE_GENDER = 1;\n\nexport const FEMALE_GENDER = 2;\n\nexport default [\n    {\n    id: 1,\n    gender: 'male',\n    name: 'gents',\n    nameCap: 'Gents',\n    salonType: 'barbers',\n    openingTimes: OPENING_TIMES_GENDER_1_DATA,\n    },\n    {\n        id: 2,\n        gender: 'female',\n        name: 'ladies',\n        nameCap: 'Ladies',\n        salonType: 'salon',\n        openingTimes: OPENING_TIMES_GENDER_2_DATA,\n    }\n]","export const OPENING_TIMES_GENDER_1_DATA = [\n        {\n            dayName: 'Monday',\n            dayNumber: 1,\n            open: true,\n            openTime: '9:00',\n            closeTime: '16:00',\n        },\n        {\n            dayName: 'Tuesday',\n            dayNumber: 2,\n            open: true,\n            openTime: '9:00',\n            closeTime: '16:00',\n        },\n        {\n            dayName: 'Wednesday',\n            dayNumber: 3,\n            open: true,\n            openTime: '9:00',\n            closeTime: '16:00',\n        },\n        {\n            dayName: 'Thursday',\n            dayNumber: 4,\n            open: true,\n            openTime: '9:00',\n            closeTime: '16:00',\n        },\n        {\n            dayName: 'Friday',\n            dayNumber: 5,\n            open: true,\n            openTime: '9:00',\n            closeTime: '16:00',\n        },\n        {\n            dayName: 'Saturday',\n            dayNumber: 6,\n            open: true,\n            openTime: '9:00',\n            closeTime: '12:00',\n        },\n        { dayName: 'Sunday', dayNumber: 0, open: false },\n]\n\nexport const OPENING_TIMES_GENDER_2_DATA = [\n    {\n        dayName: 'Monday',\n        dayNumber: 1,\n        open: true,\n        openTime: '9:00',\n        closeTime: '16:00',\n    },\n    {\n        dayName: 'Tuesday',\n        dayNumber: 2,\n        open: true,\n        openTime: '9:00',\n        closeTime: '16:00',\n    },\n    {\n        dayName: 'Wednesday',\n        dayNumber: 3,\n        open: true,\n        openTime: '9:00',\n        closeTime: '16:00',\n    },\n    {\n        dayName: 'Thursday',\n        dayNumber: 4,\n        open: true,\n        openTime: '9:00',\n        closeTime: '16:00',\n    },\n    {\n        dayName: 'Friday',\n        dayNumber: 5,\n        open: true,\n        openTime: '9:00',\n        closeTime: '16:00',\n    },\n    {\n        dayName: 'Saturday',\n        dayNumber: 6,\n        open: true,\n        openTime: '9:00',\n        closeTime: '16:00',\n    },\n    { dayName: 'Sunday', dayNumber: 0, open: false },\n]","// External, react, library, etc imports\nimport React, { useState, useEffect, createContext } from 'react';\n\n// Internal global, context, etc\n\n// Website, function/hooks, etc imports\nimport _genderData, { DEFAULT_GENDER } from './genderData';\n\nexport const GenderContext = createContext();\n\nfunction getInitialGender(){\n\tif (sessionStorage.getItem('localStateCurrentGender')) {\n\t\treturn parseInt(sessionStorage.getItem('localStateCurrentGender'));\n\t}\n\treturn DEFAULT_GENDER;\n}\n\nexport const GenderDataProvider = ({ children }) => {\n\tconst [genderData] = useState(_genderData);\n\t\n\tconst [currentGender, setCurrentGender] = useState(getInitialGender());\n\tconst [currentGenderData, setCurrentGenderData] = useState({});\n\tconst [otherGenderData, setOtherGenderData] = useState({});\n\n\tuseEffect(() => {\n\t\t\n\t\tsetOtherGenderData(function() {\n\t\t\tfor (let i = 0; i < genderData.length; i++) {\n\t\t\t\tif (genderData[i].id !== currentGender) {\n\t\t\t\t\treturn genderData[i];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tsetCurrentGenderData(function() {\n\t\t\tfor (let i = 0; i < genderData.length; i++) {\n\t\t\t\tif (genderData[i].id === currentGender) {\n\t\t\t\t\treturn genderData[i];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}, [genderData, currentGender]);\n\n\treturn (\n\t\t<GenderContext.Provider\n\t\t\tvalue={{ currentGender, setCurrentGender, currentGenderData, otherGenderData, genderData }}\n\t\t>\n\t\t\t{children}\n\t\t</GenderContext.Provider>\n\t);\n};\n\n\n","// External, react, library, etc imports\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n// Internal global, context, etc\nimport { GenderContext } from '../genderContext/genderContext.js';\n\n// Website, function/hooks, etc imports\n// NA ATM\n\nconst ToggleButton = styled.button`\n\n\t&[data-element-type='a'] {\n\t\tbackground: none;\n\t\tcolor: inherit;\n\t\tborder: none;\n\t\tpadding: 0;\n\t\tfont: inherit;\n\t\tcursor: pointer;\n\t\toutline: inherit;\n\t\ttext-decoration: underline;\n\t}\n\t\n`;\n\nconst ToggleGender = ({children, elementType}) => {\n\tconst { otherGenderData, currentGender, setCurrentGender } = useContext(GenderContext);\n\n\tconst toggleGender = () => {\n\t\tif (currentGender === 1) {\n\t\t\tsetCurrentGender(2);\n\t\t\tsessionStorage.setItem('localStateCurrentGender', 2);\n\t\t} else {\n\t\t\tsetCurrentGender(1);\n\t\t\tsessionStorage.setItem('localStateCurrentGender', 1);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ToggleButton onClick={toggleGender} data-element-type={elementType}>\n\t\t\t{children ? \n\t\t\t\t(children) : \n\t\t\t\t('Show ' + otherGenderData.name + ' website')\n\t\t\t}\n\t\t</ToggleButton>\n\t);\n};\n\nexport default ToggleGender;\n\n\nToggleGender.defaultProps = {\n\telementType: 'button',\n\ttitle: 'Toggle gender view',\n};\n\nToggleGender.propTypes = {\n\telementType: PropTypes.string,\n\tchildren: PropTypes.any,\n\ttitle: PropTypes.string,\n};\n","\n\n\n// External, react, library, etc imports\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\n// Internal global, context, etc\nimport { GenderContext } from '../genderContext/genderContext.js';\n\n// Website, function/hooks, etc imports\n// NA ATM\n\n\nfunction ClearGender({ children, title }) {\n\tconst { setCurrentGender } = useContext(GenderContext);\n\n\tconst clear = () => {\n\t\tsetCurrentGender();\n\t\tsessionStorage.removeItem('localStateCurrentGender');\n\t};\n\n\treturn (\n\t\t<button onClick={clear} title={title}>\n\t\t\t{children}\n\t\t</button>\n\t);\n}\n\nexport default ClearGender;\n\nClearGender.defaultProps = {\n\tchildren: 'Clear gender choice',\n\ttitle: 'Clear gender',\n};\n\nClearGender.propTypes = {\n\ttitle: PropTypes.string,\n};\n","// External, react, library, etc imports\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\n\n// Internal global, context, etc\nimport { GenderContext } from '../genderContext/genderContext.js';\n\n// Website, function/hooks, etc imports\n// NA ATM\n\nconst ToggleButton = styled.button`\n    padding: .6rem 1rem;\n\tbackground: lightgray;\n    border: 2px solid black;\n    position: relative;\n    top: 2px;\n\n\t&:first-of-type {\n\t\tborder-right: none;\n\t}\n\n\t&.active {\n\t\tbackground: #fff;\n\t\tborder-bottom: 2px solid white;\n\t}\n`;\n\nconst sortToggleButtonOrder = (currentGender, genderData) => {\n\tconst toBeFirst = currentGender;\n\treturn genderData.sort(function(x,y){ return x.id === toBeFirst ? -1 : y === toBeFirst ? 1 : 0; });\n}\n\nconst ToggleGender = ({genderData, genderDataForCalendar, setGenderForCalendar}) => {\n\tconst { currentGender } = useContext(GenderContext);\n\n\tconst toggleGenderForCalendar = (e) => {\n\t\tlet genderId = parseInt(e.target.getAttribute('data-id'));\n\t\tsetGenderForCalendar(genderId);\n\t};\n\n\tsortToggleButtonOrder(currentGender, genderData);\n\t\n\treturn (\n\t\t<>\n\t\t{genderDataForCalendar && (\n\t\t\tgenderData.map(gender => {\n\t\t\t\treturn (\n\t\t\t\t\t<ToggleButton \n\t\t\t\t\t\tkey={gender.id} \n\t\t\t\t\t\tdata-id={gender.id} \n\t\t\t\t\t\tonClick={toggleGenderForCalendar}\n\t\t\t\t\t\tclassName={genderDataForCalendar.id === gender.id ? 'active': null}>\n\t\t\t\t\t\t{gender.nameCap}\n\t\t\t\t\t</ToggleButton>\n\t\t\t\t);\n\t\t\t})\n\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ToggleGender;\n","export const OPENING_TIMES_HAVE_CHANGED_MESSAGE = 'Please note: opening times have changed from our normal schedule this week.';\n\nexport const CHANGED_OPENING_TIMES_DATA = [\n\t{\n        date: '05/30/2020',\n        gender: 1,\n        dayName: 'Monday',\n        dayNumber: 1,\n        open: false,\n        openTime: '9:00',\n        closeTime: '16:00',\n    },\n    {\n        date: '05/10/2020',\n        gender: 2,\n        dayName: 'Saturday',\n        dayNumber: 6,\n        open: false,\n        openTime: '15:00',\n        closeTime: '16:00',\n    },\n];","export const moment = require('moment');\nexport const momentDayToday = moment().day();\nexport const momentDateToday = moment().format('L');\nexport const momentDateIn7Days = moment().add(7, 'days').format('L');","// External, react, library, etc imports\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Internal global, context, etc\n// NA ATM\n\n// Website, function/hooks, etc imports\n// NA ATM\n\nconst Day = styled.li`\n\tdisplay: flex;\n\tposition: relative;\n\n\t&.today::before {\n\t\tcontent: ' ';\n\t\tleft: -13px;\n\t\ttop: 4px;\n\t\tposition: absolute;\n\t\twidth: 0;\n\t\theight: 0;\n\t\tborder-style: solid;\n\t\tborder-width: 5px 0 5px 10px;\n\t\tborder-color: transparent transparent transparent #9dafa8;\n\t}\n`;\n\nconst Spacer = styled.span `\n\tflex-grow: 1;\n\tmargin: 0 8px;\n\tposition: relative;\n\t\n\t::before {\n\t\tbackground: black;\n\t\tbottom: 2px;\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\theight: 1px;\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t}\n`;\n\nconst OpeningTimes = styled.span `\n\ttext-align: right;\n`;\n\nconst TimeAdjusted = styled.span `\n\tpadding-left: 4px;\n`;\n\nconst OpeningTimesByDay = ({children, className, dayName, openTime, closeTime, open, timesAdjusted}) => {\n\treturn (\n\t\t<Day className={className}>\n\t\t\t<span>{dayName}</span>\n\t\t\t<Spacer/>\n\t\t\t<OpeningTimes>\n\t\t\t\t{open ? (\n\t\t\t\t\topenTime + ' - ' + closeTime\n\t\t\t\t) : (\n\t\t\t\t\t'Closed'\n\t\t\t\t)}\n\t\t\t</OpeningTimes>\n\t\t\t{timesAdjusted && (\n\t\t\t\t<TimeAdjusted>\n\t\t\t\t*\n\t\t\t\t</TimeAdjusted>\n\t\t\t)}\n\t\t</Day>\n\t);\n};\n\nexport default OpeningTimesByDay;\n","// External, react, library, etc imports\nimport React, { useEffect, useState } from 'react';\n\n// Internal global, context, etc\nimport {CHANGED_OPENING_TIMES_DATA} from './data/changedOpeningTimes';\nimport {momentDayToday, momentDateToday, momentDateIn7Days} from '../../libraries/moment/moment';\n\n// Website, function/hooks, etc imports\nimport OpeningTimesByDay from '../OpeningTimesByDay';\n\nconst getAlternativeTimesForTheFollowing7Days = (genderDataForCalendar) => {\n    const alternativeOpeningTimesThisWeek = [];\n\n    (genderDataForCalendar && CHANGED_OPENING_TIMES_DATA ) && (\n        CHANGED_OPENING_TIMES_DATA.forEach((dateWithCHANGED_OPENING_TIMES_DATA, i) => {\n            ((momentDateToday <= dateWithCHANGED_OPENING_TIMES_DATA.date) && (momentDateIn7Days > dateWithCHANGED_OPENING_TIMES_DATA.date) && (dateWithCHANGED_OPENING_TIMES_DATA.gender === genderDataForCalendar.id)) && (\n                alternativeOpeningTimesThisWeek.push(dateWithCHANGED_OPENING_TIMES_DATA)\n            )\n               \n        })\n    )\n    return alternativeOpeningTimesThisWeek;\n}\n\nconst setNewWeekCalendar = (genderDataForCalendar) => {\n    const alternativeOpeningTimesThisWeek = getAlternativeTimesForTheFollowing7Days(genderDataForCalendar);\n    if (alternativeOpeningTimesThisWeek.length > 0 ) {\n        if (genderDataForCalendar) {\n            const originalOpeningTimes = genderDataForCalendar.openingTimes;\n            return originalOpeningTimes.map(obj => alternativeOpeningTimesThisWeek.find(o => o.dayNumber === obj.dayNumber) || obj);\n        }\n    }\n    if (genderDataForCalendar) {\n        return genderDataForCalendar.openingTimes;\n    }\n}\n\nconst WeeklyOpeningTimes = ({genderDataForCalendar, className}) => {\n    const [weekCalendar, setWeekCalendar] = useState([]);\n\n    useEffect(() => {\n\t\tsetWeekCalendar(setNewWeekCalendar(genderDataForCalendar));\n\t}, [genderDataForCalendar]);\n\n\treturn (\n\t\t<ol className={className}>\n\t\t\t{weekCalendar && (\n                weekCalendar.map((day, index) => {\n                    const dayUniqueKey = `DAY_${index}`;\n\n                    return (\n                        <OpeningTimesByDay\n                            key={dayUniqueKey} \n                            className={(day.dayNumber === momentDayToday) ? 'today' : ''}\n                            timesAdjusted={(day.date) ? true : false}\n                            dayName={day.dayName}\n                            openTime={day.openTime}\n                            closeTime={day.closeTime}\n                            open={day.open}\n                        />\n                    );\n                })\n            )}\n\t\t</ol>\n\t);\n};\n\nexport default WeeklyOpeningTimes;\n\n","// External, react, library, etc imports\nimport React, {  useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// Internal global, context, etc\nimport {CHANGED_OPENING_TIMES_DATA, OPENING_TIMES_HAVE_CHANGED_MESSAGE} from '../WeeklyOpeningTimes/data/changedOpeningTimes';\nimport {momentDateToday, momentDateIn7Days} from '../../libraries/moment/moment';\n\n// Website, function/hooks, etc imports\n// NA ATM\n\nconst Message = styled.div`\n    background: lightgray;\n    font-size: small;\n    padding: .8rem;\n    margin-top: 1em;\n`;\n\nconst haveOpeningTimesChanged = (genderDataForCalendar) => {\n    if (genderDataForCalendar) {\n        const foundDay = CHANGED_OPENING_TIMES_DATA.find(e => \n            (\n                (momentDateToday <= e.date) && (momentDateIn7Days > e.date) && (e.gender === genderDataForCalendar.id)\n            ));\n        if (foundDay){\n            return true;\n        }\n    }\n    return false;\n}\n\nconst WeeklyOpeningTimes = ({genderDataForCalendar}) => {\n    const [openingTimesHaveChanged, setOpeningTimesHaveChanged] = useState(false);\n\n    useEffect(() => {\n\t\tsetOpeningTimesHaveChanged(\n            haveOpeningTimesChanged(genderDataForCalendar)\n        );\n    }, [genderDataForCalendar]);\n\n\treturn (\n        openingTimesHaveChanged ? (\n            <Message>\n                <p><strong>*</strong> {OPENING_TIMES_HAVE_CHANGED_MESSAGE}</p>\n            </Message>\n        ) : (null)\n\t);\n};\n\nexport default WeeklyOpeningTimes;\n\n","// External, react, library, etc imports\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\n\n// Internal global, context, etc\nimport { GenderContext } from '../genderContext/genderContext.js';\n\n// Website, function/hooks, etc imports\nimport ToggleGender from '../ToggleGender/index.js';\n\nconst Message = styled.div`\n    background: lightgray;\n    font-size: small;\n    padding: .8rem;\n    margin-top: 1em;\n`;\n\nconst PromptToChangeGenderContext = ({genderDataForCalendar}) => {\n    const { currentGender, currentGenderData, otherGenderData } = useContext(GenderContext);\n\n    let genderDataIsDifferentToParentComponentData = false;\n\n    if (genderDataForCalendar){\n        if (currentGender !== genderDataForCalendar.id) {\n            genderDataIsDifferentToParentComponentData = true;\n        } else {\n            genderDataIsDifferentToParentComponentData = false;\n        }\n    }\n\n\treturn (\n        genderDataIsDifferentToParentComponentData ? (\n            <Message>\n                <p>You're on our {currentGenderData.name} {currentGenderData.salonType} website. To view more information from the {otherGenderData.name} {otherGenderData.salonType} side of our business, <ToggleGender elementType='a'>switch to the {otherGenderData.name} {otherGenderData.salonType} website</ToggleGender>.</p>\n            </Message>\n        ) : (null)\n\t);\n};\n\nexport default PromptToChangeGenderContext;\n\n","// External, react, library, etc imports\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Internal global, context, etc\n\n\n// Website, function/hooks, etc imports\n\nimport WeeklyOpeningTimes from '../../components/WeeklyOpeningTimes';\nimport OpeningTimesChangedMessage from '../../components/OpeningTimesChangedMessage';\nimport PromptToChangeGenderContext from '../../components/PromptToChangeGenderContext';\n\nconst Calendar = styled.div`\n\tborder: 2px solid black;\n\tfont-weight: 500;\n\tpadding: 1rem;\n`;\n\nconst CalendarTitle = styled.h3`\n\tcolor: black;\n\tfont-size: 1.18rem;\n\tfont-weight: 700;\n\tpadding-bottom: .5rem;\n`;\n\nconst OpeningTimesCalendar = ({genderDataForCalendar}) => {\n\treturn (\n\t\t<Calendar>\n\t\t\t<CalendarTitle>Opening hours</CalendarTitle>\n\t\t\t<WeeklyOpeningTimes \n\t\t\t\tgenderDataForCalendar={genderDataForCalendar}/>\n\t\t\t<OpeningTimesChangedMessage\n\t\t\t\tgenderDataForCalendar={genderDataForCalendar}/>\n\t\t\t<PromptToChangeGenderContext\n\t\t\t\tgenderDataForCalendar={genderDataForCalendar}/>\n\t\t</Calendar>\t\n\t);\n};\n\nexport default OpeningTimesCalendar;\n","// External, react, library, etc imports\nimport React, { useState, useEffect, useContext } from 'react';\n// import styled from 'styled-components';\n\n// Internal global, context, etc\nimport { GenderContext } from '../genderContext/genderContext.js';\n\n// Website, function/hooks, etc imports\nimport ToggleCalendar from '../../components/ToggleCalendar';\nimport OpeningTimesCalendar from '../../components/OpeningTimesCalendar';\n\nconst getNewGenderDataForCalendar = (genderData, genderForCalendar) => {\t\n\tconst genderMatch = genderData.find(e => (e.id === genderForCalendar));\n\tif (genderMatch){\n\t\treturn genderMatch;\n\t}\n};\n\nconst OpeningTimes = () => {\n\tconst { currentGender, currentGenderData, genderData } = useContext(GenderContext);\n\tconst [genderForCalendar, setGenderForCalendar] = useState(currentGender);\n\tconst [genderDataForCalendar, setGenderDataForCalendar] = useState(currentGenderData);\n\n\tuseEffect(() => {\n\t\tsetGenderDataForCalendar(getNewGenderDataForCalendar(genderData,genderForCalendar));\n\t}, [genderData, genderForCalendar]);\n\n\treturn (\n\t\t<>\n\t\t\t<ToggleCalendar \n\t\t\t\tgenderData={genderData} \n\t\t\t\tgenderDataForCalendar={genderDataForCalendar}\n\t\t\t\tsetGenderForCalendar={setGenderForCalendar}/>\n\t\t\t<OpeningTimesCalendar \n\t\t\t\tgenderDataForCalendar={genderDataForCalendar}/>\n\t\t</>\n\t);\n};\n\nexport default OpeningTimes;\n","// External, react, library, etc imports\nimport React, { useContext } from 'react';\n\n// Internal global, context, etc\nimport { GenderContext } from '../../components/genderContext/genderContext';\n\n// Website, function/hooks, etc imports\nimport ToggleGender from '../../components/ToggleGender';\nimport ClearGender from '../../components/ClearGender';\nimport OpeningTimes from '../../components/OpeningTimes';\n\nfunction HomePage() {\n\tconst { currentGenderData } = useContext(GenderContext);\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Taylors &amp; Co Hair and Barbering</h1>\n\t\t\t{currentGenderData && (\n\t\t\t\t<h2>\n\t\t\t\t\t{'The ' +\n\t\t\t\t\t\tcurrentGenderData.nameCap +\n\t\t\t\t\t\t' ' +\n\t\t\t\t\t\tcurrentGenderData.salonType}\n\t\t\t\t</h2>\n\t\t\t)}\n\t\t\t\n\t\t\t<br />\n\n\t\t\t<OpeningTimes/>\n\n\t\t\t<br />\n\t\t\t<ToggleGender/>\n\t\t\t<ClearGender/>\n\t\t</>\n\t);\n}\n\nexport default HomePage;","// External, react, library, etc imports\nimport React from 'react';\n\n// Internal global, context, etc\n\n\n// Website, function/hooks, etc imports\n\n\nfunction ErrorPage() {\n\treturn (\n\t\t<>\n\t\t\t<div>Error</div>\n\t\t</>\n\t);\n}\n\nexport default ErrorPage;\n","import HomePage, { config as HomeConfig } from './HomePage';\nimport ErrorPage, { config as ErrorConfig } from './ErrorPage';\n\nconst pages = [\n\t{\n\t\t...HomeConfig,\n\t\texact: true,\n\t\tcomponent: HomePage,\n\t\tnavigationItem: true,\n\t\tnavigationChildren: {\n\t\t\ttoggleGenders: true\n\t\t}\n\t},\n\t{\n\t\t...ErrorConfig,\n\t\texact: false,\n\t\tcomponent: ErrorPage,\n\t\tnavigationItem: false,\n\t},\n];\n\nexport default pages;\n","export default {\n\tpath: '/',\n};\n","export default {\n\tpath: '*',\n};\n","// External, react, library, etc imports\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Internal global, context, etc\n// NA ATM\n\n// Website, function/hooks, etc imports\n// NA ATM\n\n\nconst Nav = styled.nav``;\n\nfunction Navigation({ navItems }) {\n\tconsole.log(navItems)\n\treturn (\n\t\t<Nav>\n\t\t\t{/* {navItems.map((navItem, index) => {\n\t\t\t\tconst navItemUniqueKey = `NAV_ITEM_${index}`;\n\t\t\t\treturn <li key={navItemUniqueKey}>{navItem.name}</li>;\n\t\t\t})} */}\n\t\t</Nav>\n\t);\n}\n\nexport default Navigation;\n","// External, react, library, etc imports\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Internal global, context, etc\n\n\n// Website, function/hooks, etc imports\nimport Navigation from '../Navigation';\nimport pages from '../../pages';\n\nconst Root = styled.div`\n\tbackground: red;\n\t/* display: flex; */\n\tfont-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n\tfont-size: 18px;\n\t/* overflow: hidden; */\n\t/* flex: 1; */\n`;\n\nconst ContentArea = styled.div`\n\tbackground: white;\n\t/* flex-basis: 100%; */\n\t/* margin: 50px; */\n\t/* display: flex;\n    flex-direction: column; */\n`;\n\nconst Main = styled.main`\n\t/* height: 100vh; */\n\t/* overflow: scroll;\n    white-space: nowrap; */\n`;\n\nfunction MainLayout({ children }) {\n\treturn (\n\t\t<Root>\n\t\t\t<ContentArea>\n\t\t\t\t<Navigation navItems={pages}/>\n\t\t\t\t<Main>{children}</Main>\n\t\t\t</ContentArea>\n\t\t</Root>\n\t);\n}\n\nexport default MainLayout;\n","// External, react, library, etc imports\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\n\n// Internal global, context, etc\nimport { GenderContext } from '../genderContext/genderContext.js';\n\n// Website, function/hooks, etc imports\n// NA ATM\n\nconst Gender = styled.div`\n\twidth: 100%;\n\tmin-height: 50vh;\n\toverflow: hidden;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-image: url(https://source.unsplash.com/random/1000x760);\n    background-size: cover;\n\tcursor: pointer;\n\tposition: relative;\n\n\t& span {\n\t\tbackground: white;\n\t\tpadding: 10px;\n\t}\n`;\n\nconst Wrapper = styled.div`\n\n\theight: 100%;\n`;\n\nconst ChooseGender = () => {\n\tconst { genderData, setCurrentGender } = useContext(GenderContext);\n\n\tconst setGender = e => {\n\t\tlet genderId = parseInt(e.target.getAttribute('data-id'));\n\t\tsetCurrentGender(genderId);\n\t\tsessionStorage.setItem('localStateCurrentGender', genderId);\n\t};\n\tconsole.log(genderData[0].id);\n\n\treturn (\n\t\t<>\n\t\t\t{/* <Gender key={genderData[0].id} \n\t\t\t\t\tdata-id={genderData[0].id} \n\t\t\t\t\tonClick={setGender}\n\t\t\t\t\trole='button'>\n\t\t\t\t<Wrapper data-id={genderData[0].id} onClick={setGender}>\n\t\t\t\t\t<span onClick={setGender}\n\t\t\t\t\t\tdata-id={genderData[0].id}>\n\t\t\t\t\t\t{genderData[0].gender}\n\t\t\t\t\t</span>\n\t\t\t\t</Wrapper>\n\t\t\t</Gender> */}\n\t\t\t{genderData.map(gender => {\n\t\t\t\treturn (\n\t\t\t\t\t<Gender key={gender.id} \n\t\t\t\t\t\t\tdata-id={gender.id} \n\t\t\t\t\t\t\tonClick={setGender}>\n\t\t\t\t\t\t<span>{gender.nameCap}</span>\n\t\t\t\t\t</Gender>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n};\n\nexport default ChooseGender;\n","// External, react, library, etc imports\nimport React, { useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Internal global, context, etc\nimport { GenderContext } from '../genderContext/genderContext.js';\n\n// Website, function/hooks, etc imports\nimport '../App/App.css';\nimport '../App/reset.css';\nimport pages from '../../pages';\nimport Layout from '../../components/Layout';\nimport ChooseGender from '../ChooseGender';\n\nfunction SetScreens() {\n\tconst { currentGender } = useContext(GenderContext);\n\n\treturn (\n\t\t<>\n\t\t\t{currentGender ? (\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{pages.map((props, index) => {\n\t\t\t\t\t\t\tconst routeUniqueKey = `ROUTE_${index}`;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={routeUniqueKey}\n\t\t\t\t\t\t\t\t\texact={props.exact}\n\t\t\t\t\t\t\t\t\tpath={props.path}\n\t\t\t\t\t\t\t\t\tcomponent={routeProps => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Layout {...routeProps} {...props}>\n\t\t\t\t\t\t\t\t\t\t\t\t<props.component />\n\t\t\t\t\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t) : (\n\t\t\t\t<ChooseGender />\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default SetScreens;\n","// External, react, library, etc imports\nimport React from 'react';\n\n// Internal global, context, etc\nimport { GenderDataProvider } from '../genderContext/genderContext';\n\n// Website, function/hooks, etc imports\nimport SetScreens from '../SetScreens';\nimport './App.css';\nimport './reset.css';\n\n\nfunction App() {\n\treturn (\n\t\t<GenderDataProvider>\n\t\t\t<SetScreens />\n\t\t</GenderDataProvider> \n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}